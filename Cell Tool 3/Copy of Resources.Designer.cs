//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cell_Tool_3.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Cell_Tool_3.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap accImage {
            get {
                object obj = ResourceManager.GetObject("accImage", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Accord.NET Framework
        ///
        ///Copyright (c) 2009-2017, Accord.NET Authors &lt;authors@accord-framework.net&gt;
        ///
        ///    This library is free software; you can redistribute it and/or modify it
        ///	under the terms of the GNU Lesser General Public License as published by
        ///	the Free Software Foundation; either version 2.1 of the License, or (at 
        ///	your option) any later version.
        ///
        ///    The copyright holders provide no reassurances that the source code provided
        ///	does not infringe any patent, copyright, or any other intellectual prop [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string AccordLicence {
            get {
                return ResourceManager.GetString("AccordLicence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bio-Formats - under the terms of the GNU public &quot;copyleft&quot; license, any software package linking to Bio-Formats, either directly or indirectly, cannot be distributed unless its source code is also made available under the terms of the GPL. Some components which provide reader and writer implementations for open file formats, are released under a more permissive BSD-2 license which enables non-GPL third party software. For a complete list of which file formats are included in the BSD license, see the BSD col [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string BioFormats {
            get {
                return ResourceManager.GetString("BioFormats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap bulls_eye {
            get {
                object obj = ResourceManager.GetObject("bulls_eye", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap CancelRed {
            get {
                object obj = ResourceManager.GetObject("CancelRed", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap chart_mini {
            get {
                object obj = ResourceManager.GetObject("chart_mini", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap chart_miniGS {
            get {
                object obj = ResourceManager.GetObject("chart_miniGS", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap CheckMark {
            get {
                object obj = ResourceManager.GetObject("CheckMark", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap CheckMarkTrack {
            get {
                object obj = ResourceManager.GetObject("CheckMarkTrack", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Circle {
            get {
                object obj = ResourceManager.GetObject("Circle", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {\rtf1\adeflang1025\ansi\ansicpg1252\uc1\adeff0\deff0\stshfdbch0\stshfloch31506\stshfhich31506\stshfbi31506\deflang1033\deflangfe1033\themelang1033\themelangfe0\themelangcs0{\fonttbl{\f0\fbidi \froman\fcharset204\fprq2{\*\panose 02020603050405020304}Times New Roman;}
        ///{\f34\fbidi \froman\fcharset204\fprq2{\*\panose 02040503050406030204}Cambria Math;}{\f39\fbidi \fswiss\fcharset204\fprq2{\*\panose 020f0502020204030204}Calibri;}
        ///{\flomajor\f31500\fbidi \froman\fcharset204\fprq2{\*\panose 02020603050405020304 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Citation {
            get {
                return ResourceManager.GetString("Citation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        internal static System.Drawing.Icon CT_done {
            get {
                object obj = ResourceManager.GetObject("CT_done", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap cut_mini {
            get {
                object obj = ResourceManager.GetObject("cut_mini", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap DataSourcesIcon {
            get {
                object obj = ResourceManager.GetObject("DataSourcesIcon", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap DeleteRed {
            get {
                object obj = ResourceManager.GetObject("DeleteRed", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap EX {
            get {
                object obj = ResourceManager.GetObject("EX", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap export {
            get {
                object obj = ResourceManager.GetObject("export", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap folder_add_icon {
            get {
                object obj = ResourceManager.GetObject("folder_add_icon", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap FolderIcon {
            get {
                object obj = ResourceManager.GetObject("FolderIcon", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap freeselection_1 {
            get {
                object obj = ResourceManager.GetObject("freeselection_1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap G_R_done_1_ALL_rights_reserved1 {
            get {
                object obj = ResourceManager.GetObject("G_R_done_1_ALL_rights_reserved1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IMPORTANT NOTICE
        ///
        ///  Copyright (C) 1998-2008 Free Software Foundation, Inc.
        ///  Copyright (C) 1996-2011 Oracle and/or its affiliates
        ///  Copyright (C) 2002-2011 Jeroen Frijters
        ///
        ///  Some files in this distribution are part of GNU Classpath or OpenJDK and
        ///  are licensed under the GNU General Public License (GPL) version 2
        ///  with &quot;Classpath&quot; exception. This applies in particular to:
        ///    - IKVM.OpenJDK.*.dll
        ///    - some of the *.java files (see each file header for license)
        ///
        ///  See http://www.gnu.org/softwa [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ikvm {
            get {
                return ResourceManager.GetString("ikvm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap info {
            get {
                object obj = ResourceManager.GetObject("info", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LICENSE AGREEMENT
        ///
        ///CellTool - software for bio-image analysis
        ///https://dnarepair.bas.bg/software/CellTool
        ///Copyright (C) 2018  Georgi Danovski
        ///
        ///This program is free software: you can redistribute it and/or modify
        ///it under the terms of the GNU General Public License as published by
        ///the Free Software Foundation, either version 3 of the License, or
        ///(at your option) any later version.
        ///
        ///This program is distributed in the hope that it will be useful,
        ///but WITHOUT ANY WARRANTY; without even the implied wa [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string LicenseAgreementCT {
            get {
                return ResourceManager.GetString("LicenseAgreementCT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LibTiff.Net
        ///
        ///Copyright (c) 2008-2014, Bit Miracle
        ///All rights reserved.
        ///
        ///Redistribution and use in source and binary forms, with or without 
        ///modification, are permitted provided that the following conditions are 
        ///met: 
        ///  Redistributions of source code must retain the above copyright notice,
        ///  this list of conditions and the following disclaimer. 
        /// 
        ///  Redistributions in binary form must reproduce the above copyright 
        ///  notice, this list of conditions and the following disclaimer in the 
        ///  documen [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string LicenseAgreementLibTif {
            get {
                return ResourceManager.GetString("LicenseAgreementLibTif", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap magic {
            get {
                object obj = ResourceManager.GetObject("magic", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Math.NET Numerics
        ///https://github.com/mathnet/mathnet-numerics
        ///
        ///Math.NET Numerics is an opensource numerical library for .Net, Silverlight and Mono.
        ///
        ///Math.NET Numerics is the numerical foundation of the Math.NET initiative, aiming to provide methods and algorithms for numerical computations in science, engineering and every day use. Covered topics include special functions, linear algebra, probability models, random numbers, statistics, interpolation, integration, regression, curve fitting, integral tra [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MathNET_NumericsLicense {
            get {
                return ResourceManager.GetString("MathNET_NumericsLicense", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap mini_copy {
            get {
                object obj = ResourceManager.GetObject("mini_copy", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap move_folder {
            get {
                object obj = ResourceManager.GetObject("move_folder", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The MIT License (MIT)
        ///Copyright (c) 2011 Sebastien Ros
        ///
        ///Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &quot;Software&quot;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
        ///
        ///The above copyrig [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string NcalcLicense {
            get {
                return ResourceManager.GetString("NcalcLicense", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Data sources:
        ///
        ///	Area[roi index][roi layer][imageN]
        ///
        ///	Mean[roi index][roi layer][imageN]
        ///
        ///	Min[roi index][roi layer][imageN]
        ///
        ///	Max[roi index][roi layer][imageN]
        ///
        ///	* roi index, roi layer and imageN counting starts from 0!
        ///
        ///Functions:
        ///
        ///	Abs(-1)		Returns the absolute value of a specified number.
        ///
        ///	Sin(0)		Returns the sine of the specified angle.
        ///
        ///	Cos(0)		Returns the cosine of the specified angle.
        ///
        ///	Tan(0)		Returns the tangent of the specified angle.
        ///
        ///	Acos(1)		Returns the angle whose cosi [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string NcalcOperators {
            get {
                return ResourceManager.GetString("NcalcOperators", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap NewFile {
            get {
                object obj = ResourceManager.GetObject("NewFile", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap newFolder {
            get {
                object obj = ResourceManager.GetObject("newFolder", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap openFile {
            get {
                object obj = ResourceManager.GetObject("openFile", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OpenTK
        ///======
        ///
        ///The Open Toolkit library is a fast, low-level C# binding for OpenGL, OpenGL ES and OpenAL. It runs on all major platforms and powers hundreds of apps, games and scientific research.
        ///
        ///Use OpenTK to add cross-platform 3d graphics, audio, compute and haptics to your C# application. Integrate it into your existing user interface or use it standalone without any external dependencies.
        ///
        ///Project website: http://www.opentk.com/
        ///
        ///Official git repository: https://github.com/opentk/opentk
        ///
        ///
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string OpenTK {
            get {
                return ResourceManager.GetString("OpenTK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap paste_mini_1 {
            get {
                object obj = ResourceManager.GetObject("paste_mini_1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Play {
            get {
                object obj = ResourceManager.GetObject("Play", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap plus {
            get {
                object obj = ResourceManager.GetObject("plus", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Polygon {
            get {
                object obj = ResourceManager.GetObject("Polygon", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap processedImage {
            get {
                object obj = ResourceManager.GetObject("processedImage", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap processedImageGS {
            get {
                object obj = ResourceManager.GetObject("processedImageGS", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap rawImage {
            get {
                object obj = ResourceManager.GetObject("rawImage", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap rawImageGS {
            get {
                object obj = ResourceManager.GetObject("rawImageGS", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Rectangle_1 {
            get {
                object obj = ResourceManager.GetObject("Rectangle_1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap REDO {
            get {
                object obj = ResourceManager.GetObject("REDO", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap REDO_FIN {
            get {
                object obj = ResourceManager.GetObject("REDO_FIN", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap refresh {
            get {
                object obj = ResourceManager.GetObject("refresh", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap refresh1 {
            get {
                object obj = ResourceManager.GetObject("refresh1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Rename_icon {
            get {
                object obj = ResourceManager.GetObject("Rename_icon", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap RoiIcon {
            get {
                object obj = ResourceManager.GetObject("RoiIcon", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Save {
            get {
                object obj = ResourceManager.GetObject("Save", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap SaveAll {
            get {
                object obj = ResourceManager.GetObject("SaveAll", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap SaveAs {
            get {
                object obj = ResourceManager.GetObject("SaveAs", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap scroll_minus_last {
            get {
                object obj = ResourceManager.GetObject("scroll_minus_last", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap scroll_plus_last {
            get {
                object obj = ResourceManager.GetObject("scroll_plus_last", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Search1 {
            get {
                object obj = ResourceManager.GetObject("Search1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap settings {
            get {
                object obj = ResourceManager.GetObject("settings", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Static_ROI {
            get {
                object obj = ResourceManager.GetObject("Static_ROI", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Stop {
            get {
                object obj = ResourceManager.GetObject("Stop", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap the_blue_tick_th {
            get {
                object obj = ResourceManager.GetObject("the_blue_tick_th", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap tifIcon {
            get {
                object obj = ResourceManager.GetObject("tifIcon", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap tifIcon_Green {
            get {
                object obj = ResourceManager.GetObject("tifIcon_Green", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Tracking_ROI {
            get {
                object obj = ResourceManager.GetObject("Tracking_ROI", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Tracking_ROI_2 {
            get {
                object obj = ResourceManager.GetObject("Tracking_ROI_2", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap UNDO {
            get {
                object obj = ResourceManager.GetObject("UNDO", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap UNDO_FIN {
            get {
                object obj = ResourceManager.GetObject("UNDO_FIN", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
